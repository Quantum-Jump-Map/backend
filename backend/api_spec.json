{
  "openapi": "3.0.0",
  "info": {
    "title": "Map Society API",
    "description": "API for the Map Society location-based anonymous community platform",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.mapsociety.example",
      "description": "Production server"
    },
    {
      "url": "https://dev-api.mapsociety.example",
      "description": "Development server"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "summary": "Register a new user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {"type": "string"},
                  "email": {"type": "string"},
                  "password": {"type": "string"}
                },
                "required": ["username", "email", "password"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user_id": {"type": "integer"},
                    "username": {"type": "string"},
                    "token": {"type": "string"}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "Login a user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {"type": "string"},
                  "password": {"type": "string"}
                },
                "required": ["email", "password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user_id": {"type": "integer"},
                    "username": {"type": "string"},
                    "token": {"type": "string"}
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials"
          }
        }
      }
    },
    "/locations": {
      "get": {
        "summary": "Get locations within a specific area",
        "parameters": [
          {
            "name": "lat",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number"
            },
            "description": "Latitude of the center point"
          },
          {
            "name": "lng",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number"
            },
            "description": "Longitude of the center point"
          },
          {
            "name": "radius",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "default": 1.0
            },
            "description": "Radius in kilometers"
          }
        ],
        "responses": {
          "200": {
            "description": "List of locations with top comments",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "block_id": {"type": "integer"},
                      "address": {"type": "string"},
                      "top_comments": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "comment_id": {"type": "integer"},
                            "content": {"type": "string"},
                            "likes": {"type": "integer"},
                            "dislikes": {"type": "integer"},
                            "created_at": {"type": "string", "format": "date-time"}
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/locations/{block_id}/comments": {
      "get": {
        "summary": "Get comments for a specific location",
        "parameters": [
          {
            "name": "block_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["likes", "date"],
              "default": "likes"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of comments",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "comment_id": {"type": "integer"},
                      "user_id": {"type": "integer"},
                      "username": {"type": "string"},
                      "content": {"type": "string"},
                      "likes": {"type": "integer"},
                      "dislikes": {"type": "integer"},
                      "created_at": {"type": "string", "format": "date-time"},
                      "updated_at": {"type": "string", "format": "date-time"},
                      "user_reaction": {"type": "string", "enum": ["like", "dislike", null]}
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a new comment to a location",
        "parameters": [
          {
            "name": "block_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "content": {"type": "string"}
                },
                "required": ["content"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Comment created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "comment_id": {"type": "integer"},
                    "content": {"type": "string"},
                    "likes": {"type": "integer"},
                    "dislikes": {"type": "integer"},
                    "created_at": {"type": "string", "format": "date-time"}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/comments/{comment_id}/reaction": {
      "post": {
        "summary": "Add or update a reaction to a comment",
        "parameters": [
          {
            "name": "comment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "reaction_type": {"type": "string", "enum": ["like", "dislike", null]}
                },
                "required": ["reaction_type"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Reaction updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "comment_id": {"type": "integer"},
                    "likes": {"type": "integer"},
                    "dislikes": {"type": "integer"},
                    "user_reaction": {"type": "string", "enum": ["like", "dislike", null]}
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Comment not found"
          }
        }
      }
    },
    "/districts/{district_id}/chat-rooms": {
      "get": {
        "summary": "Get chat rooms for a district",
        "parameters": [
          {
            "name": "district_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of chat rooms",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "room_id": {"type": "integer"},
                      "room_name": {"type": "string"},
                      "created_at": {"type": "string", "format": "date-time"},
                      "active_users": {"type": "integer"}
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new chat room for a district",
        "parameters": [
          {
            "name": "district_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "room_name": {"type": "string"}
                },
                "required": ["room_name"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Chat room created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "room_id": {"type": "integer"},
                    "room_name": {"type": "string"},
                    "created_at": {"type": "string", "format": "date-time"}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/chat-rooms/{room_id}/messages": {
      "get": {
        "summary": "Get messages from a chat room",
        "parameters": [
          {
            "name": "room_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "before",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "description": "Get messages before this message ID"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50
            },
            "description": "Limit the number of messages returned"
          }
        ],
        "responses": {
          "200": {
            "description": "List of messages",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "message_id": {"type": "integer"},
                      "user_id": {"type": "integer"},
                      "username": {"type": "string"},
                      "content": {"type": "string"},
                      "created_at": {"type": "string", "format": "date-time"}
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Send a message to a chat room",
        "parameters": [
          {
            "name": "room_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "content": {"type": "string"}
                },
                "required": ["content"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Message sent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message_id": {"type": "integer"},
                    "content": {"type": "string"},
                    "created_at": {"type": "string", "format": "date-time"}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/user/profile": {
      "get": {
        "summary": "Get the current user's profile",
        "responses": {
          "200": {
            "description": "User profile",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user_id": {"type": "integer"},
                    "username": {"type": "string"},
                    "email": {"type": "string"},
                    "profile_image": {"type": "string"},
                    "font_preference": {"type": "string"},
                    "color_preference": {"type": "string"},
                    "created_at": {"type": "string", "format": "date-time"}
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "put": {
        "summary": "Update the current user's profile",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {"type": "string"},
                  "profile_image": {"type": "string"},
                  "font_preference": {"type": "string"},
                  "color_preference": {"type": "string"}
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Profile updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user_id": {"type": "integer"},
                    "username": {"type": "string"},
                    "profile_image": {"type": "string"},
                    "font_preference": {"type": "string"},
                    "color_preference": {"type": "string"}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ]
} 