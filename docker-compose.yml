version: '3.8'

services:
  reverse-proxy:
    image: nginx:stable
    container_name: reverse-proxy
    ports:
      - "80:80"       # HTTP → HTTPS 리디렉션 및 certbot 인증용
      - "443:443"     # HTTPS 트래픽
    volumes:
      - ./nginx/conf:/etc/nginx/conf.d
      - ./certs:/etc/letsencrypt
      - ./nginx/html:/var/www/certbot
    depends_on:
      - api-server
    restart: always

  api-server:
    build: ./server
    container_name: api-server
    expose:
      - "3000"        # 내부 통신 전용 포트
    env_file:
      - .env
    depends_on:
      - user-db
      - app-db
    restart: always

  user-db:
    image: mysql:8
    container_name: user-db
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: user_db
    expose:
      - "3306"
    volumes:
      - user_data:/var/lib/mysql
      - ./db/user/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: always

  app-db:
    image: mysql:8
    container_name: app-db
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: app_db
    expose:
      - "3306"
    volumes:
      - app_data:/var/lib/mysql
      - ./db/app/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: always

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./certs:/etc/letsencrypt
      - ./nginx/html:/var/www/certbot
    entrypoint: "/bin/sh -c"
    command: >
      "certbot certonly --webroot
      --webroot-path=/var/www/certbot
      --email your@email.com    # 내가 사용하는 이메일 추가
      --agree-tos --no-eff-email
      -d yourdomain.com"  # 여기에 우리가 사용할 도메인 추가

volumes:
  user_data:
  app_data:
